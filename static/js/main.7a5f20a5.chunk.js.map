{"version":3,"sources":["LoginModal.tsx","ShareModal.tsx","ThermoworksFirebase.tsx","TempDisplay.tsx","TempColumn.tsx","App.tsx","GraphApp.tsx","serviceWorker.ts","index.tsx","beeps.mp3"],"names":["LoginModal","props","handleShow","bind","handleClose","handleChange","handleSubmit","state","show","username","password","loginSubmitted","nextProps","this","setState","event","target","name","value","onLogin","preventDefault","Button","style","width","margin","variant","onClick","Modal","Form","onSubmit","Header","Title","href","direction","size","octoColor","bannerColor","Body","Group","controlId","Label","Control","type","placeholder","onChange","Text","className","Footer","disabled","Spinner","as","animation","role","aria-hidden","Component","ShareModal","onShare","onHide","closeButton","url","ThermoworksFirebase","fbInstance","uid","signalDevices","smokeDevices","tempData","probeState","onDataUpdate","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Map","undefined","auth","signInWithEmailAndPassword","catch","error","errorCode","code","errorMessage","message","alert","console","log","currentUser","database","ref","child","once","forEach","device","devObj","toJSON","set","deviceName","probe1Name","probe2Name","probe3Name","probe4Name","signalsStart","smokeStart","deviceID","limitToLast","on","snapshot_","addSignalsTempData","addSmokeTempData","get","details","deviceDetails","temp","names","p1","length","toString","date","alarm","Boolean","alarmSounding","p1H","p1L","alarmHigh","alarms","alarmLow","max","maxmin","p1Max","min","p1Min","p2","p2H","p2L","p2Max","p2Min","p3","p3H","p3L","p3Max","p3Min","p4","p4H","p4L","p4Max","p4Min","a","record","data","d","Date","setUTCSeconds","Number","time","push","replaceSignalsProbeDetails","alarm1High","alarm1Low","probe1H","probe1L","minMax","probe1Max","probe1Min","alarm2High","alarm2Low","probe2H","probe2L","probe2Max","probe2Min","probe1","probe2","replaceSmokeProbeDetails","TempDisplay","isAlarming","isAwknoledged","probe","background","text","newBackground","newText","newIsAlarming","newIsAwknowledged","Card","cursor","bg","border","awknowledgeAlarm","textAlign","padding","Container","fluid","Row","Col","xs","fontSize","writingMode","alarmFile","playStatus","Sound","status","PLAYING","STOPPED","loop","TempColumn","curTemps","probeDetails","TempElements","key","id","CardDeck","App","baselines","showLogin","shareURL","setCredentials","setOnTempUpdate","onTempUpdate","init","newCurTemps","returnTempData","newTemps","newProbeDetails","returnProbeDetails","newBaselines","label","wb","XLSX","book_new","Props","sheetname","replace","SheetNames","Sheets","json_to_sheet","wbout","bookType","Blob","FileSaver","axios","post","JSON","stringify","headers","response","marginTop","height","x_accessor","y_accessor","right","area","brush","exportXLSX","exportURL","Graph","location","search","URLSearchParams","method","transformResponse","parse","result","window","hostname","match","ReactDOM","render","exact","path","component","GraphApp","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.7a5f20a5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Modal from 'react-bootstrap/Modal'\nimport GithubCorner from 'react-github-corner';\nimport Spinner from 'react-bootstrap/Spinner'\n\ninterface MyProps {\n  show:boolean,\n  onLogin:(username:string, password:string) => any;\n};\ninterface MyState {\n  show: boolean\n  username: string\n  password: string\n  loginSubmitted:boolean\n};\n\nclass LoginModal extends Component<MyProps, MyState> {\n\n  constructor(props:MyProps) {\n\t\tsuper(props);\n\n\t\tthis.handleShow = this.handleShow.bind(this);\n\t\tthis.handleClose = this.handleClose.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n\t\tthis.state = {\n\t\t\tshow: props.show,\n      username: '',\n      password: '',\n      loginSubmitted:false\n\t\t};\n  }\n\n  componentWillReceiveProps(nextProps:MyProps) {\n    this.setState({...this.state, show:nextProps.show});  \n  }\n\n  handleClose() {\n\t\tthis.setState({...this.state, show: false });\n\t}\n\n\thandleShow() {\n\t\tthis.setState({...this.state, show: true, loginSubmitted:false});\n\t}\n\n  handleChange(event: React.FormEvent) {\n    let target = (event.target as HTMLInputElement);\n    this.setState({...this.state, [target.name]: target.value});\n  }\n\n  handleSubmit(event:React.FormEvent<HTMLFormElement>) {\n    this.props.onLogin(this.state.username, this.state.password);\n    this.setState({...this.state, loginSubmitted:true });\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <>\n      <Button style={{width:\"250px\", margin:\"15px\"}} variant=\"primary\" onClick={this.handleShow}>Get Started</Button>\n      <Modal show={this.state.show}>\n      <Form onSubmit={this.handleSubmit}>\n        <Modal.Header>\n          <Modal.Title>Login with Thermoworks Account</Modal.Title>\n          <GithubCorner href=\"https://github.com/dlgreenwald/SignalsMontior\" direction=\"right\" size=\"60\" octoColor=\"white\" bannerColor=\"grey\" />\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control name=\"username\" type=\"email\" value={this.state.username} placeholder=\"Enter email\" onChange={this.handleChange}/>\n            <Form.Text className=\"text-muted\">\n              We'll never share your email with anyone else.\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control name=\"password\" type=\"password\" value={this.state.password} placeholder=\"Password\" onChange={this.handleChange}/>\n          </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n\n          <Button type=\"submit\" variant=\"primary\" disabled={this.state.loginSubmitted}>\n            Login {this.state.loginSubmitted && <Spinner as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\"/>}\n          </Button>\n        </Modal.Footer>\n        </Form>\n      </Modal>\n      </>\n    );\n  }\n\n}\n\nexport default LoginModal;","import React, { Component } from 'react';\nimport './App.css';\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Modal from 'react-bootstrap/Modal'\n\ninterface MyProps {\n  url: string,\n  onShare: () => any;\n};\ninterface MyState {\n  show: boolean;\n};\n\nclass ShareModal extends Component<MyProps, MyState> {\n\n  constructor(props: MyProps) {\n\n    super(props);\n\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      show: false\n    };\n  }\n\n  componentWillReceiveProps(nextProps: MyProps) {\n    this.setState({ ...this.state });\n  }\n\n  handleClose() {\n    this.setState({ ...this.state, show: false });\n  }\n\n  handleShow() {\n    this.props.onShare();\n    this.setState({ ...this.state, show: true });\n  }\n\n  handleChange(event: React.FormEvent) {\n    let target = (event.target as HTMLInputElement);\n    this.setState({ ...this.state, [target.name]: target.value });\n  }\n\n  render() {\n    return (\n      <>\n        <Button style={{width:\"250px\", margin:\"15px\"}} variant=\"primary\" onClick={this.handleShow}>\n          Share Graph\n              </Button>\n        <Modal show={this.state.show} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Login with Thermoworks Account</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>URL</Form.Label>\n                <Form.Control name=\"URL\" type=\"email\" value={this.props.url} disabled />\n                <Form.Text className=\"text-muted\">\n                  Share this URL to share the current graph.  The link will be good for 150 days.\n                    </Form.Text>\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={this.handleClose}>\n              Close\n                  </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  };\n}\nexport default ShareModal;","import * as firebase from 'firebase/app';\nimport \"firebase/database\";\nimport \"firebase/auth\";\n\ninterface ISignalsDevice {\n  deviceID:string;\n  dateAdded:string;\n  deviceName:string;\n  fan:string;\n  probe1Name:string;\n  probe2Name:string;\n  probe3Name:string;\n  probe4Name:string;\n  wifiOnly:string;\n}\n\ninterface ISmokeDevice {\n  device:string;\n  added:string;\n  name:string;\n  serial:string;\n}\n\ninterface ISignalsTempRecord{\n  p1:string,\n  p2:string,\n  p3:string,\n  p4:string,\n  time:string\n}\n\ninterface ISmokeTempRecord{\n  probe1:string,\n  probe2:string,\n  time:string\n}\n\ninterface ISignalsDeviceDetails{\n  alarmSounding:{p1H:string, p1L:string, p2H:string, p2L:string, p3H:string, p3L:string, p4H:string, p4L:string},\n  alarmSwitch:{p1Switch:string, p2Switch:string, p3Switch:string, p4Switch:string},\n  alarms:{p1H:string, p1L:string, p2H:string, p2L:string, p3H:string, p3L:string, p4H:string, p4L:string},\n  calibration:{p1:string, p2:string, p3:string, p4:string},\n  data:{battery:string, firmware:string, wifi:string},\n  fan:{alarm:string, connection:string, setTemp:string},\n  maxmin:{p1Max:string, p1Min:string, p2Max:string, p2Min:string, p3Max:string, p3Min:string, p4Max:string, p4Min:string},\n  migrated:boolean,\n  muted: {p1:string, p2:string, p3:string, p4:string},\n  names: {device:string, p1:string, p2:string, p3:string, p4:string},\n  resetmaxmin:{p1:string, p2:string, p3:string, p4:string},\n  rings:{p1:string, p2:string, p3:string, p4:string},\n  rssi:{lastupdate:string, level:string},\n  tempunit:{unit:string}\n}\n\ninterface ISmokeDeviceDetails{\n    alarms:{ alarm1High:boolean, alarm1Low:boolean, alarm2High:boolean, alarm2Low:boolean, probe1H:string, probe1L:string, probe2H:string, probe2L:string},\n    data:{battery:number,firmware:string,wifi:number},\n    hidden:{probe1:boolean, probe2:boolean, showMaxMinP1:boolean, showMaxMinP2:true},\n    minMax:{probe1Max:string, probe1Min:string, probe2Max:string, probe2Min:string},\n    notification:{trigger1H:boolean, trigger1L:boolean, trigger2H:boolean, trigger2L:boolean, triggerLoss:boolean},\n    probeNames:{probe1:string, probe2:string},\n    unit:{probe1:string,probe2:string},\n    update:{canUpdate:boolean,time:number}\n}\n\nexport class ThermoworksFirebase {\n  fbInstance: firebase.app.App;\n  username: string;\n  password: string;\n  uid: string;\n  signalDevices: Map<String, ISignalsDevice>;\n  smokeDevices: Map<String, ISmokeDevice>;\n  tempData:Map<string, Array<{ 'date': Date; 'value': number; }>>;\n  probeState:Map<string, { \"temp\":string, \"date\":Date, \"alarm\":boolean, \"alarmHigh\":string, \"alarmLow\":string, \"max\":string, \"min\":string, \"name\":string}>;\n  onDataUpdate?:() => any;\n\n  constructor() {\n    //these were mined from the android APK... hopefully they don't mind too much\n    this.fbInstance = firebase.initializeApp({\n      apiKey: 'AIzaSyCfCUKlG5-VPsqta-9M92XBSFLHYsbSqLk',\n      authDomain: 'smoke-cloud.firebaseapp.com',\n      databaseURL: 'https://smoke-cloud.firebaseio.com',\n      projectId: 'smoke-cloud',\n      storageBucket: 'smoke-cloud.appspot.com',\n      messagingSenderId: '74663406178'\n    });\n\n    this.username = '';\n    this.password = '';\n    this.uid = '';\n    this.signalDevices = new Map();\n    this.smokeDevices = new Map();\n    this.tempData = new Map();\n    this.onDataUpdate = undefined;\n    this.probeState = new Map();\n  }\n\n  setCredentials(username:string, password:string){\n    this.username = username;\n    this.password = password;\n  }\n\n  async init(){\n    this.uid = '';\n    this.signalDevices = new Map();\n    await this.fbInstance.auth().signInWithEmailAndPassword(this.username, this.password).catch(function(error) {\n      // Handle Errors here.  @TODO probably need a better way of handling errors with a callback.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      if (errorCode === 'auth/wrong-password') {\n        alert('Wrong password.');\n      } else {\n        alert(errorMessage);\n      }\n      console.log(error);\n    });\n    this.uid = this.fbInstance.auth().currentUser!.uid;\n\n    //we have to wait for this to come back once to finish init, but we also need to subscribe to changes.\n    //init signals devices\n    var signalsDevicesQuery = await this.fbInstance.database().ref().child(\"users\").child(this.uid).child(\"devices\").child(\"signals\").once(\"value\");\n  \n    signalsDevicesQuery.forEach((device) => {\n      var devObj = device.toJSON() as ISignalsDevice;\n\n      this.signalDevices.set(devObj.deviceName,devObj);\n      //init empty temp data\n      this.tempData.set(devObj.deviceName+\":\"+devObj.probe1Name, [])\n      this.tempData.set(devObj.deviceName+\":\"+devObj.probe2Name, [])\n      this.tempData.set(devObj.deviceName+\":\"+devObj.probe3Name, [])\n      this.tempData.set(devObj.deviceName+\":\"+devObj.probe4Name, [])\n\n      //subscribe to update events on each device\n      this.signalsStart(devObj);\n    });\n\n    //This actually won't work yet, I don't know the dataformat of a user with a smoke device.\n    var smokeDevicesQuery = await this.fbInstance.database().ref().child(\"users\").child(this.uid).child(\"devices\").child(\"smoke\").once(\"value\");\n\n    smokeDevicesQuery.forEach((device) => {\n      var devObj = device.toJSON() as ISmokeDevice;\n      this.smokeDevices.set(devObj.name,devObj);\n      //init empty temp data\n      this.tempData.set(devObj.name+\":Probe 1\", [])\n      this.tempData.set(devObj.name+\":Probe 2\", [])\n\n      //subscribe to update events on each device\n      this.smokeStart(devObj);\n    });\n  }\n\n  //Returns temp data for all probes on both smoke and signals devices\n  returnTempData(): Map<string, Array<{ 'date': Date; 'value': number; }>>{\n    return this.tempData;\n  }\n\n //@TODO make this return type a interface that is imported (or exported)\n  returnProbeDetails(): Map<string, { \"temp\":string, \"date\":Date, \"alarm\":boolean, \"alarmHigh\":string, \"alarmLow\":string, \"max\":string, \"min\":string, \"name\":string}>{\n    return this.probeState; \n  }\n\n  setOnTempUpdate(onDataUpdate:() => any){\n    this.onDataUpdate = onDataUpdate;\n  }\n\n\n  //This starts a ongoing query with firebase for updates on a sepcific signal device\n  signalsStart(device: ISignalsDevice){\n    this.fbInstance.database().ref().child(\"SignalTemps\").child(device.deviceID).limitToLast(300).on(\"value\", (snapshot_ => this.addSignalsTempData(device.deviceName, snapshot_)));\n  }\n  \n  //This starts a ongoing query with firebase for updates on a sepcific smoke device\n  smokeStart(device: ISmokeDevice){\n    this.fbInstance.database().ref().child(\"smokeTemp\").child(device.device).limitToLast(300).on(\"value\", (snapshot_ => this.addSmokeTempData(device.name, snapshot_)));\n  }\n\n  //This fetches and replaces the signals device details.  It's current called once fore each temp update.  \n  //@TODO It would probably be better for it to have a similar update method as addTempData, both methods should call a common convert function. That way we make fewer calls to the database\n  async replaceSignalsProbeDetails(deviceName:string){\n    //lets do the conversion here rather than when requested.\n    var device = this.signalDevices.get(deviceName);\n    var deviceID:string = \"\";\n    if(device!==undefined){\n      deviceID=device.deviceID;\n    }\n\n    var details = await this.fbInstance.database().ref().child(\"signals\").child(deviceID).limitToLast(20).once(\"value\");\n    var deviceDetails = details.toJSON() as ISignalsDeviceDetails\n    \n    //It pains me to write code like this, but it's unavoidable with the way the data is stuctured.\n    //The best thing we can do is restructure the data as soon as we have it.\n    //P1\n    var temp = this.tempData.get(deviceName+\":\"+deviceDetails.names.p1)\n    if(temp !== undefined && temp[temp.length-1]!==undefined){\n      this.probeState.set(deviceName+\":\"+deviceDetails.names.p1, {\n        temp:temp[temp.length-1].value.toString(),\n        date:temp[temp.length-1].date,\n        alarm:Boolean(deviceDetails.alarmSounding.p1H)||Boolean(deviceDetails.alarmSounding.p1L),\n        alarmHigh:deviceDetails.alarms.p1H,\n        alarmLow:deviceDetails.alarms.p1L,\n        max:deviceDetails.maxmin.p1Max,\n        min:deviceDetails.maxmin.p1Min,\n        name:deviceDetails.names.p1\n      });\n    }\n\n    //P2\n    temp = this.tempData.get(deviceName+\":\"+deviceDetails.names.p2)\n    if(temp !== undefined && temp[temp.length-1]!==undefined){\n      this.probeState.set(deviceName+\":\"+deviceDetails.names.p2, {\n        temp:temp[temp.length-1].value.toString(),\n        date:temp[temp.length-1].date,\n        alarm:Boolean(deviceDetails.alarmSounding.p2H)||Boolean(deviceDetails.alarmSounding.p2L),\n        alarmHigh:deviceDetails.alarms.p2H,\n        alarmLow:deviceDetails.alarms.p2L,\n        max:deviceDetails.maxmin.p2Max,\n        min:deviceDetails.maxmin.p2Min,\n        name:deviceDetails.names.p2\n      });\n    }\n\n    //P3\n    temp = this.tempData.get(deviceName+\":\"+deviceDetails.names.p3)\n    if(temp !== undefined && temp[temp.length-1]!==undefined){\n      this.probeState.set(deviceName+\":\"+deviceDetails.names.p3, {\n        temp:temp[temp.length-1].value.toString(),\n        date:temp[temp.length-1].date,\n        alarm:Boolean(deviceDetails.alarmSounding.p3H)||Boolean(deviceDetails.alarmSounding.p3L),\n        alarmHigh:deviceDetails.alarms.p3H,\n        alarmLow:deviceDetails.alarms.p3L,\n        max:deviceDetails.maxmin.p3Max,\n        min:deviceDetails.maxmin.p3Min,\n        name:deviceDetails.names.p3\n      });\n    }\n\n    //P4\n    temp = this.tempData.get(deviceName+\":\"+deviceDetails.names.p4)\n    if(temp !== undefined && temp[temp.length-1]!==undefined){\n      this.probeState.set(deviceName+\":\"+deviceDetails.names.p4, {\n        temp:temp[temp.length-1].value.toString(),\n        date:temp[temp.length-1].date,\n        alarm:Boolean(deviceDetails.alarmSounding.p4H)||Boolean(deviceDetails.alarmSounding.p4L),\n        alarmHigh:deviceDetails.alarms.p4H,\n        alarmLow:deviceDetails.alarms.p4L,\n        max:deviceDetails.maxmin.p4Max,\n        min:deviceDetails.maxmin.p4Min,\n        name:deviceDetails.names.p4\n      });\n    }\n  }\n  \n  async addSignalsTempData(deviceName:string, a:firebase.database.DataSnapshot){\n    var device = this.signalDevices.get(deviceName);\n\n    a.forEach((record:firebase.database.DataSnapshot) => {\n      var data = record.toJSON() as ISignalsTempRecord;\n\n      var d = new Date(0);\n      d.setUTCSeconds(Number(data.time));\n\n      if(device !== undefined){\n        data.p1!==\"---\"&&this.tempData.get(device.deviceName+\":\"+device.probe1Name)!.push({date:d, value:Number(data.p1)});\n        data.p2!==\"---\"&&this.tempData.get(device.deviceName+\":\"+device.probe2Name)!.push({date:d, value:Number(data.p2)});\n        data.p3!==\"---\"&&this.tempData.get(device.deviceName+\":\"+device.probe3Name)!.push({date:d, value:Number(data.p3)});\n        data.p4!==\"---\"&&this.tempData.get(device.deviceName+\":\"+device.probe4Name)!.push({date:d, value:Number(data.p4)});\n  \n      }\n    });\n\n    await this.replaceSignalsProbeDetails(deviceName);\n\n    if(this.onDataUpdate!==undefined){\n      this.onDataUpdate();\n    }\n\n  }\n\n  async replaceSmokeProbeDetails(deviceName:string){\n    var device = this.smokeDevices.get(deviceName);\n    var deviceID:string = \"\";\n    if(device!==undefined){\n      deviceID=device.device;\n    }\n\n    var details = await this.fbInstance.database().ref().child(\"smoke\").child(deviceID).limitToLast(20).once(\"value\");\n    var deviceDetails = details.toJSON() as ISmokeDeviceDetails;\n\n    //It pains me to write code like this, but it's unavoidable with the way the data is stuctured.\n    //The best thing we can do is restructure the data as soon as we have it.\n    //P1\n    var temp = this.tempData.get(deviceName+\":Probe 1\")\n    if(temp !== undefined && temp[temp.length-1]!==undefined){\n      this.probeState.set(deviceName+\":Probe 1\", {\n        temp:temp[temp.length-1].value.toString(),\n        date:temp[temp.length-1].date,\n        alarm:Boolean(deviceDetails.alarms.alarm1High)||Boolean(deviceDetails.alarms.alarm1Low),\n        alarmHigh:deviceDetails.alarms.probe1H,\n        alarmLow:deviceDetails.alarms.probe1L,\n        max:deviceDetails.minMax.probe1Max,\n        min:deviceDetails.minMax.probe1Min,\n        name:deviceName\n      });\n    }\n\n    //P2\n    temp = this.tempData.get(deviceName+\":Probe 2\")\n    if(temp !== undefined && temp[temp.length-1]!==undefined){\n      this.probeState.set(deviceName+\":Probe 2\", {\n        temp:temp[temp.length-1].value.toString(),\n        date:temp[temp.length-1].date,\n        alarm:Boolean(deviceDetails.alarms.alarm2High)||Boolean(deviceDetails.alarms.alarm2Low),\n        alarmHigh:deviceDetails.alarms.probe2H,\n        alarmLow:deviceDetails.alarms.probe2L,\n        max:deviceDetails.minMax.probe2Max,\n        min:deviceDetails.minMax.probe2Min,\n        name:deviceName\n      });\n    }\n  }\n\n  async addSmokeTempData(deviceName:string, a:firebase.database.DataSnapshot){\n    var device = this.smokeDevices.get(deviceName);\n\n    a.forEach((record:firebase.database.DataSnapshot) => {\n      var data = record.toJSON() as ISmokeTempRecord;\n\n      var d = new Date(0);\n      d.setUTCSeconds(Number(data.time));\n\n      if(device!== undefined){\n        data.probe1!==\"-\"&&this.tempData.get(device.name+\":Probe 1\")!.push({date:d, value:Number(data.probe1)});\n        data.probe2!==\"-\"&&this.tempData.get(device.name+\":Probe 2\")!.push({date:d, value:Number(data.probe2)});\n      }\n    });\n\n    await this.replaceSmokeProbeDetails(deviceName);\n\n    if(this.onDataUpdate!==undefined){\n      this.onDataUpdate();\n    }\n\n  }\n\n}\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport {CardProps} from 'react-bootstrap/Card'\nimport Container from 'react-bootstrap/Container'\nimport Sound from 'react-sound'\nimport alarmFile from './beeps.mp3'\n\ninterface MyProps {\n    name: string, \n    probe:{ \"temp\":string, \"date\":Date, \"alarm\":boolean, \"alarmHigh\":string, \"alarmLow\":string, \"max\":string, \"min\":string, \"name\":string},\n};\ninterface MyState {\n    name: string, \n    isAlarming:boolean;\n    isAwknoledged:boolean;\n    background:CardProps[\"bg\"],\n    text:CardProps[\"text\"],\n    probe:{ \"temp\":string, \"date\":Date, \"alarm\":boolean, \"alarmHigh\":string, \"alarmLow\":string, \"max\":string, \"min\":string, \"name\":string}};\n  \n  class TempDisplay extends Component<MyProps, MyState> {\n    constructor(props:MyProps){\n        super(props);\n\n        this.state = {\n            isAlarming:false,\n            isAwknoledged:false,\n            probe:props.probe,\n            name:props.name,\n            background:\"light\",\n            text:\"secondary\"\n        }\n    }\n\n    componentWillReceiveProps(nextProps:MyProps) {\n        var temp:Number = Number(nextProps.probe.temp);\n        var alarmHigh:Number = Number(nextProps.probe.alarmHigh);\n        var alarmLow:Number = Number(nextProps.probe.alarmLow);\n\n        var newBackground:CardProps[\"bg\"] = 'light';\n        var newText:CardProps[\"text\"] = \"secondary\";\n        var newIsAlarming = false;\n        var newIsAwknowledged = this.state.isAwknoledged;\n\n        if((alarmLow < temp) && (temp < alarmHigh)){\n            newBackground = 'light';\n            newText = 'secondary';\n            newIsAwknowledged=false;\n        }\n        if((alarmLow > temp)){\n            newBackground = \"primary\";\n            newText = 'white';\n            newIsAlarming = true;\n        }\n        if((temp > alarmHigh)){\n            newBackground = \"danger\";\n            newText=\"white\";\n            newIsAlarming = true;\n        }\n        console.log(\"Temp Details(Low:\"+alarmLow+\", Temp:\"+temp+\",  High:\"+alarmHigh+\")\");\n        console.log(\"Alarm State: \"+newIsAlarming+\" IsAwknowledged:\"+newIsAwknowledged);\n        this.setState({...this.state, name:nextProps.name, probe:nextProps.probe, background:newBackground, text:newText, isAlarming:newIsAlarming, isAwknoledged:newIsAwknowledged});  \n      }\n\n      awknowledgeAlarm(){\n        this.setState({...this.state, isAwknoledged:true});\n      }\n\n    render() {\n        return(\n            <>\n            <div className=\"row cardContainer\">\n                <Card className=\"col card\" style={{cursor: 'pointer'}} text={this.state.text} bg={this.state.background} border=\"dark\" onClick={this.awknowledgeAlarm.bind(this)}>\n                    <Card.Title style={{textAlign:\"center\"}}>{this.state.name}</Card.Title>\n                    <Card.Body style={{padding:0}}>\n                    <Container fluid>\n                        <Row style={{padding:0}}>\n                            <Col xs=\"4\" style={{padding:0}}>\n                                <Row style={{padding:0}}><Col><Row style={{fontSize:\"xx-small\", padding:0, margin:0}}>MinAlarm</Row><Row style={{fontSize:\"large\", padding:0, margin:0}}>{this.state.probe.alarmLow}</Row></Col></Row>\n                                <Row style={{padding:0}}><Col><Row style={{fontSize:\"xx-small\", padding:0, margin:0}}>MaxAlarm</Row><Row style={{fontSize:\"large\", padding:0, margin:0}}>{this.state.probe.alarmHigh}</Row></Col></Row>\n                            </Col>\n                            <Col xs=\"4\" style={{padding:0}}>\n                                <Row style={{fontSize:\"xx-large\", writingMode:\"vertical-lr\", padding:0}}>{this.state.probe.temp}°</Row>\n                            </Col>\n                            <Col xs=\"4\" style={{padding:0}}>\n                                <Row style={{padding:0}}><Col><Row style={{fontSize:\"xx-small\", padding:0, margin:0}}>Min</Row><Row style={{fontSize:\"large\", padding:0, margin:0}}>{this.state.probe.min}</Row></Col></Row>\n                                <Row style={{padding:0}}><Col><Row style={{fontSize:\"xx-small\", padding:0, margin:0}}>Max</Row><Row style={{fontSize:\"large\", padding:0, margin:0}}>{this.state.probe.max}</Row></Col></Row>\n                            </Col>\n                        </Row>\n                    </Container>\n                    <Sound url={alarmFile} playStatus={this.state.isAlarming&&!this.state.isAwknoledged?Sound.status.PLAYING:Sound.status.STOPPED} loop={true}/>\n                    </Card.Body>\n                </Card>\n            </div>\n            </>\n        )\n    }\n\n  }\n\n  export default TempDisplay;\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport CardDeck from 'react-bootstrap/CardDeck'\nimport TempDisplay from './TempDisplay'\n\n\n\ninterface MyProps {\n    //Remove me\n    curTemps:Map<string, { 'date': Date; 'value': Number; }>,\n    probeDetails:Map<string, { \"temp\":string, \"date\":Date, \"alarm\":boolean, \"alarmHigh\":string, \"alarmLow\":string, \"max\":string, \"min\":string, \"name\":string}>;\n};\ninterface MyState {\n    curTemps:Map<string, { 'date': Date; 'value': Number; }>,\n    probeDetails:Map<string, { \"temp\":string, \"date\":Date, \"alarm\":boolean, \"alarmHigh\":string, \"alarmLow\":string, \"max\":string, \"min\":string, \"name\":string}>;\n}\n  class TempColumn extends Component<MyProps, MyState> {\n    constructor(props:MyProps){\n        super(props);\n\n        this.state =  {\n            curTemps:props.curTemps,\n            probeDetails:props.probeDetails\n        }\n    }\n\n    componentWillReceiveProps(nextProps:MyProps) {\n        this.setState({ curTemps: nextProps.curTemps, probeDetails:nextProps.probeDetails  });  \n    }\n\n    render() {\n        var TempElements:Array<JSX.Element> = [];\n        this.state.probeDetails.forEach((device, key) => \n            TempElements.push(<TempDisplay name={key} probe={device}/>)\n    )\n        return(\n            <>\n            <div id=\"cardDeckContainer\" className=\"row\">\n                <CardDeck id=\"cardDeck\" className=\"col\">\n                    {TempElements}\n                </CardDeck>\n            </div>\n            </>\n        )\n    }\n\n  }\n\n  export default TempColumn;","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport MetricsGraphics from 'react-metrics-graphics';\nimport LoginModal from './LoginModal';\nimport ShareModal from './ShareModal';\nimport {ThermoworksFirebase} from './ThermoworksFirebase';\nimport TempColumn from './TempColumn';\nimport './mggraphics.css';\nimport GithubCorner from 'react-github-corner';\nimport ContainerDimensions from 'react-container-dimensions';\nimport Button from 'react-bootstrap/Button';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport axios from 'axios';\n\ninterface MyProps {\n\n};\ninterface MyState {\n  firebase: ThermoworksFirebase\n  tempData:Array<Array<{ 'date': Date; 'value': number; }>>;\n  curTemps:Map<string, { 'date': Date; 'value': number; }>;\n  probeDetails:Map<string, { \"temp\":string, \"date\":Date, \"alarm\":boolean, \"alarmHigh\":string, \"alarmLow\":string, \"max\":string, \"min\":string, \"name\":string}>;\n  showLogin:boolean;\n  baselines:Array<{value:number, label:string}>;\n  shareURL:string;\n};\nclass App extends Component<{}, MyState> {\n  constructor(state:MyProps){\n    super(state);\n\n    this.state = {\n      firebase: new ThermoworksFirebase(),\n      tempData:  [],\n      baselines: [],\n      curTemps: new Map(),\n      probeDetails: new Map(),\n      showLogin:true,\n      shareURL:\"\"\n    };\n  }\n\n  async onLogin(username:string, password:string){\n    this.state.firebase.setCredentials(username, password);\n    this.state.firebase.setOnTempUpdate(this.onTempUpdate.bind(this));\n    await this.state.firebase.init();\n    this.setState({...this.state, showLogin:false})\n  }\n\nonTempUpdate(){\n    //Store most recent data as Map for display\n    var newCurTemps:Map<string, { 'date': Date; 'value': number; }> = new Map();\n    this.state.firebase.returnTempData().forEach((probe, key)=>{\n      newCurTemps.set(key, probe[probe.length-1]);\n    })\n\n    //Store all data as Array of Arrays for graph\n    var newTemps:Array<Array<{ 'date': Date; 'value': number; }>>=[];\n    this.state.firebase.returnTempData().forEach((probe)=>{\n      if(probe.length!==0){//the graph componant chokes if it's passed empty datasets.\n        newTemps.push(probe);\n      }\n    })\n\n    var newProbeDetails = this.state.firebase.returnProbeDetails();\n\n    var newBaselines:Array<{value:number, label:string}> =  [];\n    this.state.firebase.returnProbeDetails().forEach((value, key) => {\n      newBaselines.push({value:Number(value.alarmHigh), label:key+\" High\"});\n      if(value.alarmLow!==\"32\"){\n        newBaselines.push({value:Number(value.alarmLow), label:key+\" Low\"})\n      }\n    })\n\n    this.setState({...this.state, \n      tempData:newTemps, curTemps:newCurTemps, probeDetails:newProbeDetails, baselines:newBaselines\n    });\n  }\n\n  async exportXLSX(){\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    const fileExtension = '.xlsx';\n\n    //create book\n    var wb = XLSX.utils.book_new();\n    wb.Props = {\n      Title: \"ThermoWorks Temperature Log\"\n    }\n\n    this.state.firebase.returnTempData().forEach((value, key) => {\n      if(value.length!==0){\n        var sheetname = key.replace(':','-'); //xlsx silently fails once there are colons in the sheet name\n        wb.SheetNames.push(sheetname);\n        wb.Sheets[sheetname] = XLSX.utils.json_to_sheet(value);\n      }\n      \n    })\n\n    //write the book out and stream it to the browser as a file\n    var wbout = XLSX.write(wb, {bookType:'xlsx',  type: 'array'});\n    const data = new Blob([wbout], {type: fileType});\n    FileSaver.saveAs(data, \"Temps\" + fileExtension);\n  }\n\n  async exportURL(){\n    var response = await axios.post(\"https://jsonblob.com/api/jsonBlob\", JSON.stringify({tempData:this.state.tempData, baselines:this.state.baselines}), {headers:{'Content-Type': 'application/json', 'Accept':'application/json'}});\n    this.setState({...this.state, shareURL:\"https://www.dlgreen.com/SignalsMonitor/share?id=\"+response.headers[\"x-jsonblob\"]})\n    console.log(response.headers[\"x-jsonblob\"]);\n  }\n\n  render() {\n    return (\n      <div id=\"App\" style={{padding:0, margin:15}} className=\"row\">\n        <GithubCorner href=\"https://github.com/dlgreenwald/SignalsMontior\" direction=\"left\" octoColor=\"#212529\" bannerColor=\"grey\" />\n        <div id=\"container\"  style={{marginTop:45}} className=\"col\">\n          <div id=\"headerContainer\" className=\"row\">\n            <div id=\"header\">\n              Better Thermoworks Monitor\n            </div>\n          </div>\n          <div id=\"body\" className=\"row\">\n            <div id=\"irbe\">\n              <div id=\"graphContainer\" className=\"row\">\n                <ContainerDimensions>\n                  {({ width, height }) =>\n                    <MetricsGraphics\n                      data={this.state.tempData}\n                      width={width}\n                      height={600}\n                      x_accessor=\"date\"\n                      y_accessor=\"value\"\n                      right=\"40\"\n                      area=\"false\"\n                      brush=\"xy\"\n                      baselines={this.state.baselines}\n                    />\n                  }\n                </ContainerDimensions>\n              </div>\n              <TempColumn curTemps={this.state.curTemps} probeDetails={this.state.probeDetails} />\n              <div id=\"buttonContainer\" className=\"row\">\n                <div id=\"buttons\" className=\"col\">\n                  <LoginModal show={this.state.showLogin} onLogin={this.onLogin.bind(this)} />\n                  <Button style={{width:\"250px\", margin:\"15px\"}} onClick={this.exportXLSX.bind(this)}>Download *.xlsx</Button>\n                  <ShareModal url={this.state.shareURL} onShare={this.exportURL.bind(this)}/>\n                </div>\n              </div>\n            </div>\n          </div>  \n          <div id=\"footer\" className=\"row\">\n            <div id=\"footerContainer\" className=\"col\">\n              \n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport MetricsGraphics from 'react-metrics-graphics';\nimport './mggraphics.css';\nimport GithubCorner from 'react-github-corner';\nimport ContainerDimensions from 'react-container-dimensions';\nimport { RouteComponentProps } from 'react-router';\nimport axios from 'axios';\n\ninterface MatchParams {\n}\n\n\ninterface Props extends RouteComponentProps<MatchParams> {\n}\n\ninterface MyState {\n  tempData:Array<Array<{ 'date': Date; 'value': number; }>>;\n  baselines:Array<{value:number, label:string}>;\n};\nclass Graph extends Component<Props, MyState> {\n  constructor(state:Props){\n    super(state);\n\n    this.state = {\n      tempData:  [],\n      baselines: []\n    };\n  }\n\n  async componentDidMount(){\n    console.log(this.props.location.search);\n    let search = new URLSearchParams(this.props.location.search);\n    console.log(search.get(\"id\"));\n    var result = await axios({\n            method: 'GET',\n            url: \"https://jsonblob.com/api/jsonBlob/\"+search.get(\"id\"),\n            transformResponse:[(data) => {\n                return JSON.parse(data, (key, value) => {\n                    if (key === \"date\"){\n                        return new Date(value);\n                    }else{\n                        return value;\n                    }\n                });\n            }\n            ]\n        });\n    this.setState({...this.state, tempData:result.data.tempData, baselines:result.data.baselines})\n  }\n\n  render() {\n    return (\n      <div id=\"App\" style={{padding:0, margin:15}} className=\"row\">\n        <GithubCorner href=\"https://github.com/dlgreenwald/SignalsMontior\" direction=\"left\" octoColor=\"#212529\" bannerColor=\"grey\" />\n        <div id=\"container\"  style={{marginTop:45}} className=\"col\">\n          <div id=\"headerContainer\" className=\"row\">\n            <div id=\"header\">\n              Better Thermoworks Monitor\n            </div>\n          </div>\n          <div id=\"body\" className=\"row\">\n            <div id=\"irbe\">\n              <div id=\"graphContainer\" className=\"row\">\n                <ContainerDimensions>\n                  {({ width, height }) =>\n                    <MetricsGraphics\n                      data={this.state.tempData}\n                      width={width}\n                      height={600}\n                      x_accessor=\"date\"\n                      y_accessor=\"value\"\n                      right=\"40\"\n                      area=\"false\"\n                      baselines={this.state.baselines}\n                    />\n                  }\n                </ContainerDimensions>\n              </div>\n              <div id=\"buttonContainer\" className=\"row\">\n                <div id=\"buttons\" className=\"col\">\n                </div>\n              </div>\n            </div>\n          </div>  \n          <div id=\"footer\" className=\"row\">\n            <div id=\"footerContainer\" className=\"col\">\n              \n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default Graph;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport GraphApp from  './GraphApp'\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\nReactDOM.render(\n    <Router>\n        <Route exact path=\"/SignalsMonitor/\" component={App} />\n        <Route exact path=\"/SignalsMonitor/share\" component={GraphApp} />\n    </Router>\n    \n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/beeps.927d19ee.mp3\";"],"sourceRoot":""}