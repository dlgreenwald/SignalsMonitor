{"version":3,"sources":["LoginModal.tsx","ShareModal.tsx","MarkerModal.tsx","ThermoworksFirebase.tsx","TempDisplay.tsx","TempColumn.tsx","GraphApp.tsx","App.tsx","serviceWorker.ts","index.tsx","beeps.mp3"],"names":["LoginModal","props","handleShow","bind","handleClose","handleChange","handleSubmit","state","username","password","loginSubmitted","this","setState","event","target","name","value","onLogin","preventDefault","Button","style","width","margin","variant","onClick","Modal","show","Form","onSubmit","Header","Title","href","direction","size","octoColor","bannerColor","Body","Group","controlId","Label","Control","type","placeholder","onChange","Text","className","Footer","disabled","Spinner","as","animation","role","aria-hidden","Component","ShareModal","onShare","onHide","closeButton","url","MarkerModal","textEntered","annotationText","newState","onSave","date","ThermoworksFirebase","fbInstance","uid","signalDevices","smokeDevices","tempData","probeState","signalsDeviceDetails","smokeDeviceDetails","onDataUpdate","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Map","undefined","auth","signInWithEmailAndPassword","catch","error","errorCode","code","errorMessage","message","alert","console","log","currentUser","database","ref","child","once","signalsDevicesQuery","toJSON","device","val","devObj","set","deviceName","probe1Name","probe2Name","probe3Name","probe4Name","deviceID","limitToLast","temps","addSignalsTempData","signalsStart","smokeDevicesQuery","smokeStart","on","snapshot_","addSignalsData","addSmokeTempData","addSmokeData","a","deviceDetails","replaceSignalsProbeDetails","replaceSmokeProbeDetails","get","temp","names","p1","length","toString","alarm","Boolean","alarmSounding","p1H","p1L","alarmHigh","alarms","alarmLow","max","maxmin","p1Max","min","p1Min","p2","p2H","p2L","p2Max","p2Min","p3","p3H","p3L","p3Max","p3Min","p4","p4H","p4L","p4Max","p4Min","numChildren","forEach","record","data","d","Date","setUTCSeconds","Number","time","push","alarm1High","alarm1Low","probe1H","probe1L","minMax","probe1Max","probe1Min","alarm2High","alarm2Low","probe2H","probe2L","probe2Max","probe2Min","probe1","probe2","TempDisplay","isAwknoledged","probe","Background","IsAlarming","Card","cursor","text","bg","border","awknowledgeAlarm","textAlign","padding","Container","fluid","Row","Col","xs","fontSize","writingMode","alarmFile","playStatus","Sound","status","PLAYING","STOPPED","loop","TempColumn","curTemps","probeDetails","TempElements","key","id","CardDeck","Graph","baselines","markers","search","URLSearchParams","location","axios","method","transformResponse","JSON","parse","result","marginTop","height","x_accessor","y_accessor","right","area","aggregate_rollover","missing_is_hidden","App","showLogin","shareURL","addingMarker","selectedDate","setCredentials","setOnTempUpdate","onTempUpdate","init","newCurTemps","returnTempData","newTemps","newProbeDetails","returnProbeDetails","newBaselines","label","wb","XLSX","book_new","Props","sheetname","replace","SheetNames","Sheets","json_to_sheet","wbout","bookType","Blob","FileSaver","post","stringify","headers","response","annotation","history","match","brush","click","onGraphClick","exportXLSX","exportURL","saveAnnotation","window","hostname","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.f793d259.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Modal from 'react-bootstrap/Modal'\nimport GithubCorner from 'react-github-corner';\nimport Spinner from 'react-bootstrap/Spinner'\n\ninterface MyProps {\n  show:boolean,\n  onLogin:(username:string, password:string) => any;\n};\ninterface MyState {\n  username: string\n  password: string\n  loginSubmitted:boolean\n};\n\nclass LoginModal extends Component<MyProps, MyState> {\n\n  constructor(props:MyProps) {\n\t\tsuper(props);\n\n\t\tthis.handleShow = this.handleShow.bind(this);\n\t\tthis.handleClose = this.handleClose.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n\t\tthis.state = {\n      username: '',\n      password: '',\n      loginSubmitted:false\n\t\t};\n  }\n\n  handleClose() {\n\t\tthis.setState({...this.state});\n\t}\n\n\thandleShow() {\n\t\tthis.setState({...this.state, loginSubmitted:false});\n\t}\n\n  handleChange(event: React.FormEvent) {\n    let target = (event.target as HTMLInputElement);\n    this.setState({...this.state, [target.name]: target.value});\n  }\n\n  handleSubmit(event:React.FormEvent<HTMLFormElement>) {\n    this.props.onLogin(this.state.username, this.state.password);\n    this.setState({...this.state, loginSubmitted:true });\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <>\n      <Button style={{width:\"250px\", margin:\"15px\"}} variant=\"primary\" onClick={this.handleShow}>Get Started</Button>\n      <Modal show={this.props.show}>\n      <Form onSubmit={this.handleSubmit}>\n        <Modal.Header>\n          <Modal.Title>Login with Thermoworks Account</Modal.Title>\n          <GithubCorner href=\"https://github.com/dlgreenwald/SignalsMontior\" direction=\"right\" size=\"60\" octoColor=\"white\" bannerColor=\"grey\" />\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control name=\"username\" type=\"email\" value={this.state.username} placeholder=\"Enter email\" onChange={this.handleChange}/>\n            <Form.Text className=\"text-muted\">\n              We'll never share your email with anyone else.\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control name=\"password\" type=\"password\" value={this.state.password} placeholder=\"Password\" onChange={this.handleChange}/>\n          </Form.Group>\n\n        </Modal.Body>\n        <Modal.Footer>\n\n          <Button type=\"submit\" variant=\"primary\" disabled={this.state.loginSubmitted}>\n            Login {this.state.loginSubmitted && <Spinner as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\"/>}\n          </Button>\n        </Modal.Footer>\n        </Form>\n      </Modal>\n      </>\n    );\n  }\n\n}\n\nexport default LoginModal;","import React, { Component } from 'react';\nimport './App.css';\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Modal from 'react-bootstrap/Modal'\n\ninterface MyProps {\n  url: string,\n  onShare: () => any;\n};\ninterface MyState {\n  show: boolean;\n};\n\nclass ShareModal extends Component<MyProps, MyState> {\n\n  constructor(props: MyProps) {\n\n    super(props);\n\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      show: false\n    };\n  }\n\n  handleClose() {\n    this.setState({ ...this.state, show: false });\n  }\n\n  handleShow() {\n    this.props.onShare();\n    this.setState({ ...this.state, show: true });\n  }\n\n  handleChange(event: React.FormEvent) {\n    let target = (event.target as HTMLInputElement);\n    this.setState({ ...this.state, [target.name]: target.value });\n  }\n\n  render() {\n    return (\n      <>\n        <Button style={{width:\"250px\", margin:\"15px\"}} variant=\"primary\" onClick={this.handleShow}>\n          Share Graph\n              </Button>\n        <Modal show={this.state.show} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Share Graph</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>URL</Form.Label>\n                <Form.Control name=\"URL\" type=\"email\" value={this.props.url} disabled />\n                <Form.Text className=\"text-muted\">\n                  Share this URL to share the current graph.  The link will be good for 150 days.\n                    </Form.Text>\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" onClick={this.handleClose}>\n              Close\n                  </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  };\n}\nexport default ShareModal;","import React, { Component } from 'react';\nimport './App.css';\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Modal from 'react-bootstrap/Modal'\n\ninterface MyProps {\n  date:Date,\n  onSave: (date:Date, annotation:string) => any;\n  show:boolean;\n};\ninterface MyState {\n  show: boolean;\n  annotationText:string;\n  textEntered:boolean;\n};\n\nclass MarkerModal extends Component<MyProps, MyState> {\n\n  constructor(props: MyProps) {\n\n    super(props);\n\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.state = {\n      show: false,\n      textEntered:false,\n      annotationText: \"\"\n    };\n  }\n\n  handleClose() {\n    this.setState({ ...this.state, show: false });\n  }\n\n  handleShow() {\n    this.setState({ ...this.state, show: true });\n  }\n\n  handleChange(event: React.FormEvent) {\n    let target = (event.target as HTMLInputElement);\n    let newState =  { ...this.state, [target.name]: target.value };\n\n    if(newState.annotationText!==\"\"){\n      newState = {...newState, textEntered:true};\n    }\n    this.setState(newState);\n  }\n\n  handleSubmit(event:React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    this.props.onSave(this.props.date, this.state.annotationText);\n    \n  }\n\n  render() {\n    return (\n      <>\n        <Modal show={this.props.show} onHide={this.handleClose}>\n          <Form onSubmit={this.handleSubmit}>\n            <Modal.Header>\n              <Modal.Title>Annotation</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <Form.Group controlId=\"annotationText\">\n                <Form.Label>Annotation Text</Form.Label>\n                <Form.Control name=\"annotationText\" value={this.state.annotationText} placeholder=\"Please enter text\" onChange={this.handleChange} />\n              </Form.Group>\n            </Modal.Body>\n            <Modal.Footer><Button variant=\"primary\" onClick={this.handleClose}>\n              Close\n                  </Button>\n\n              <Button type=\"submit\" variant=\"primary\" disabled={!this.state.textEntered}>\n                Save\n          </Button>\n            </Modal.Footer>\n          </Form>\n        </Modal>\n      </>\n    );\n  };\n}\nexport default MarkerModal;","import * as firebase from 'firebase/app';\nimport \"firebase/database\";\nimport \"firebase/auth\";\n\ninterface ISignalsDevice {\n  deviceID:string;\n  dateAdded:string;\n  deviceName:string;\n  fan:string;\n  probe1Name:string;\n  probe2Name:string;\n  probe3Name:string;\n  probe4Name:string;\n  wifiOnly:string;\n}\n\ninterface ISmokeDevice {\n  device:string;\n  added:string;\n  name:string;\n  serial:string;\n}\n\ninterface ISignalsTempRecord{\n  p1:string,\n  p2:string,\n  p3:string,\n  p4:string,\n  time:string\n}\n\ninterface ISmokeTempRecord{\n  probe1:string,\n  probe2:string,\n  time:string\n}\n\ninterface ISignalsDeviceDetails{\n  alarmSounding:{p1H:string, p1L:string, p2H:string, p2L:string, p3H:string, p3L:string, p4H:string, p4L:string},\n  alarmSwitch:{p1Switch:string, p2Switch:string, p3Switch:string, p4Switch:string},\n  alarms:{p1H:string, p1L:string, p2H:string, p2L:string, p3H:string, p3L:string, p4H:string, p4L:string},\n  calibration:{p1:string, p2:string, p3:string, p4:string},\n  data:{battery:string, firmware:string, wifi:string},\n  fan:{alarm:string, connection:string, setTemp:string},\n  maxmin:{p1Max:string, p1Min:string, p2Max:string, p2Min:string, p3Max:string, p3Min:string, p4Max:string, p4Min:string},\n  migrated:boolean,\n  muted: {p1:string, p2:string, p3:string, p4:string},\n  names: {device:string, p1:string, p2:string, p3:string, p4:string},\n  resetmaxmin:{p1:string, p2:string, p3:string, p4:string},\n  rings:{p1:string, p2:string, p3:string, p4:string},\n  rssi:{lastupdate:string, level:string},\n  tempunit:{unit:string}\n}\n\ninterface ISmokeDeviceDetails{\n    alarms:{ alarm1High:boolean, alarm1Low:boolean, alarm2High:boolean, alarm2Low:boolean, probe1H:string, probe1L:string, probe2H:string, probe2L:string},\n    data:{battery:number,firmware:string,wifi:number},\n    hidden:{probe1:boolean, probe2:boolean, showMaxMinP1:boolean, showMaxMinP2:true},\n    minMax:{probe1Max:string, probe1Min:string, probe2Max:string, probe2Min:string},\n    notification:{trigger1H:boolean, trigger1L:boolean, trigger2H:boolean, trigger2L:boolean, triggerLoss:boolean},\n    probeNames:{probe1:string, probe2:string},\n    unit:{probe1:string,probe2:string},\n    update:{canUpdate:boolean,time:number}\n}\n\nexport class ThermoworksFirebase {\n  fbInstance: firebase.app.App;\n  username: string;\n  password: string;\n  uid: string;\n  signalDevices: Map<String, ISignalsDevice>;\n  smokeDevices: Map<String, ISmokeDevice>;\n  tempData:Map<string, Array<{ 'date': Date; 'value': number; }>>;\n  probeState:Map<string, { \"temp\":string, \"date\":Date, \"alarm\":boolean, \"alarmHigh\":string, \"alarmLow\":string, \"max\":string, \"min\":string, \"name\":string}>;\n  signalsDeviceDetails:Map<String, ISignalsDeviceDetails>;\n  smokeDeviceDetails:Map<String, ISmokeDeviceDetails>;\n  onDataUpdate?:() => any;\n\n  constructor() {\n    //these were mined from the android APK... hopefully they don't mind too much\n    this.fbInstance = firebase.initializeApp({\n      apiKey: 'AIzaSyCfCUKlG5-VPsqta-9M92XBSFLHYsbSqLk',\n      authDomain: 'smoke-cloud.firebaseapp.com',\n      databaseURL: 'https://smoke-cloud.firebaseio.com',\n      projectId: 'smoke-cloud',\n      storageBucket: 'smoke-cloud.appspot.com',\n      messagingSenderId: '74663406178'\n    });\n\n    this.username = '';\n    this.password = '';\n    this.uid = '';\n    this.signalDevices = new Map();\n    this.smokeDevices = new Map();\n    this.tempData = new Map();\n    this.onDataUpdate = undefined;\n    this.probeState = new Map();\n    this.signalsDeviceDetails = new Map();\n    this.smokeDeviceDetails = new Map();\n  }\n\n  setCredentials(username:string, password:string){\n    this.username = username;\n    this.password = password;\n  }\n\n  async init(){\n    this.uid = '';\n    this.signalDevices = new Map();\n    await this.fbInstance.auth().signInWithEmailAndPassword(this.username, this.password).catch(function(error) {\n      // Handle Errors here.  @TODO probably need a better way of handling errors with a callback.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      if (errorCode === 'auth/wrong-password') {\n        alert('Wrong password.');\n      } else {\n        alert(errorMessage);\n      }\n      console.log(error);\n    });\n    this.uid = this.fbInstance.auth().currentUser!.uid;\n\n    //we have to wait for this to come back once to finish init, but we also need to subscribe to changes.\n    //init signals devices\n    let signalsDevicesQuery = await this.fbInstance.database().ref().child(\"users\").child(this.uid).child(\"devices\").child(\"signals\").once(\"value\");\n  \n    for (let device in signalsDevicesQuery.toJSON()){\n      console.log(signalsDevicesQuery.val()[device]);\n      let devObj = signalsDevicesQuery.val()[device] as ISignalsDevice;\n\n      this.signalDevices.set(devObj.deviceName,devObj);\n      //init empty temp data\n      this.tempData.set(devObj.deviceName+\":\"+devObj.probe1Name, [])\n      this.tempData.set(devObj.deviceName+\":\"+devObj.probe2Name, [])\n      this.tempData.set(devObj.deviceName+\":\"+devObj.probe3Name, [])\n      this.tempData.set(devObj.deviceName+\":\"+devObj.probe4Name, [])\n\n      //get older data once at startup in case it exists\n      let temps = await this.fbInstance.database().ref().child(\"SignalTemps\").child(devObj.deviceID).limitToLast(300).once(\"value\");\n      this.addSignalsTempData(devObj.deviceName, temps);\n      //subscribe to update events on each device\n      this.signalsStart(devObj);\n    }\n\n    let smokeDevicesQuery = await this.fbInstance.database().ref().child(\"users\").child(this.uid).child(\"devices\").child(\"smoke\").once(\"value\");\n\n    for (let device in smokeDevicesQuery.toJSON()){\n      console.log(smokeDevicesQuery.val()[device]);\n      let devObj = smokeDevicesQuery.val()[device] as ISmokeDevice;\n      this.smokeDevices.set(devObj.name,devObj);\n      //init empty temp data\n      this.tempData.set(devObj.name+\":Probe 1\", [])\n      this.tempData.set(devObj.name+\":Probe 2\", [])\n\n      //get older data once at startup in case it exists\n      let temps = await this.fbInstance.database().ref().child(\"smokeTemp\").child(devObj.device).limitToLast(300).once(\"value\");\n      this.addSignalsTempData(devObj.name, temps);\n\n      //subscribe to update events on each device\n      this.smokeStart(devObj);\n    }\n  }\n\n  //Returns temp data for all probes on both smoke and signals devices\n  returnTempData(): Map<string, Array<{ 'date': Date; 'value': number; }>>{\n    return this.tempData;\n  }\n\n //@TODO make this return type a interface that is imported (or exported)\n  returnProbeDetails(): Map<string, { \"temp\":string, \"date\":Date, \"alarm\":boolean, \"alarmHigh\":string, \"alarmLow\":string, \"max\":string, \"min\":string, \"name\":string}>{\n    return this.probeState; \n  }\n\n  setOnTempUpdate(onDataUpdate:() => any){\n    this.onDataUpdate = onDataUpdate;\n  }\n\n\n  //This starts a ongoing query with firebase for updates on a sepcific signal device\n  signalsStart(device: ISignalsDevice){\n    this.fbInstance.database().ref().child(\"SignalTemps\").child(device.deviceID).limitToLast(1).on(\"value\", (snapshot_ => this.addSignalsTempData(device.deviceName, snapshot_)));\n    this.fbInstance.database().ref().child(\"signals\").child(device.deviceID).limitToLast(20).on(\"value\", (snapshot_ => this.addSignalsData(device.deviceName, snapshot_)));\n  }\n  \n  //This starts a ongoing query with firebase for updates on a sepcific smoke device\n  smokeStart(device: ISmokeDevice){\n    this.fbInstance.database().ref().child(\"smokeTemp\").child(device.device).limitToLast(1).on(\"value\", (snapshot_ => this.addSmokeTempData(device.name, snapshot_)));\n    this.fbInstance.database().ref().child(\"smoke\").child(device.device).limitToLast(20).on(\"value\", (snapshot_ => this.addSmokeData(device.name, snapshot_)));\n  }\n\n  async addSignalsData(deviceName:string, a:firebase.database.DataSnapshot){\n    console.log(\"Signals Device (\"+deviceName+\") Data update\");\n    var deviceDetails = a.toJSON() as ISignalsDeviceDetails\n\n    this.signalsDeviceDetails.set(deviceName, deviceDetails);\n\n    this.replaceSignalsProbeDetails(deviceName);\n  }\n\n  async addSmokeData(deviceName:string, a:firebase.database.DataSnapshot){\n    console.log(\"Smoke Device (\"+deviceName+\") Data update\");\n    var deviceDetails = a.toJSON() as ISmokeDeviceDetails;\n\n    this.smokeDeviceDetails.set(deviceName, deviceDetails);\n\n    this.replaceSmokeProbeDetails(deviceName);\n  }\n\n  //This fetches and replaces the signals device details.  It's current called once fore each temp update.  \n  replaceSignalsProbeDetails(deviceName:string){\n    //lets do the conversion here rather than when requested.\n \n    var deviceDetails = this.signalsDeviceDetails.get(deviceName)\n    if (deviceDetails !== undefined) {\n      //It pains me to write code like this, but it's unavoidable with the way the data is stuctured.\n      //The best thing we can do is restructure the data as soon as we have it.\n      //P1\n      var temp = this.tempData.get(deviceName + \":\" + deviceDetails.names.p1)\n      if (temp !== undefined && temp[temp.length - 1] !== undefined) {\n        this.probeState.set(deviceName + \":\" + deviceDetails.names.p1, {\n          temp: temp[temp.length - 1].value.toString(),\n          date: temp[temp.length - 1].date,\n          alarm: Boolean(deviceDetails.alarmSounding.p1H) || Boolean(deviceDetails.alarmSounding.p1L),\n          alarmHigh: deviceDetails.alarms.p1H,\n          alarmLow: deviceDetails.alarms.p1L,\n          max: deviceDetails.maxmin.p1Max,\n          min: deviceDetails.maxmin.p1Min,\n          name: deviceDetails.names.p1\n        });\n      }\n\n      //P2\n      temp = this.tempData.get(deviceName + \":\" + deviceDetails.names.p2)\n      if (temp !== undefined && temp[temp.length - 1] !== undefined) {\n        this.probeState.set(deviceName + \":\" + deviceDetails.names.p2, {\n          temp: temp[temp.length - 1].value.toString(),\n          date: temp[temp.length - 1].date,\n          alarm: Boolean(deviceDetails.alarmSounding.p2H) || Boolean(deviceDetails.alarmSounding.p2L),\n          alarmHigh: deviceDetails.alarms.p2H,\n          alarmLow: deviceDetails.alarms.p2L,\n          max: deviceDetails.maxmin.p2Max,\n          min: deviceDetails.maxmin.p2Min,\n          name: deviceDetails.names.p2\n        });\n      }\n\n      //P3\n      temp = this.tempData.get(deviceName + \":\" + deviceDetails.names.p3)\n      if (temp !== undefined && temp[temp.length - 1] !== undefined) {\n        this.probeState.set(deviceName + \":\" + deviceDetails.names.p3, {\n          temp: temp[temp.length - 1].value.toString(),\n          date: temp[temp.length - 1].date,\n          alarm: Boolean(deviceDetails.alarmSounding.p3H) || Boolean(deviceDetails.alarmSounding.p3L),\n          alarmHigh: deviceDetails.alarms.p3H,\n          alarmLow: deviceDetails.alarms.p3L,\n          max: deviceDetails.maxmin.p3Max,\n          min: deviceDetails.maxmin.p3Min,\n          name: deviceDetails.names.p3\n        });\n      }\n\n      //P4\n      temp = this.tempData.get(deviceName + \":\" + deviceDetails.names.p4)\n      if (temp !== undefined && temp[temp.length - 1] !== undefined) {\n        this.probeState.set(deviceName + \":\" + deviceDetails.names.p4, {\n          temp: temp[temp.length - 1].value.toString(),\n          date: temp[temp.length - 1].date,\n          alarm: Boolean(deviceDetails.alarmSounding.p4H) || Boolean(deviceDetails.alarmSounding.p4L),\n          alarmHigh: deviceDetails.alarms.p4H,\n          alarmLow: deviceDetails.alarms.p4L,\n          max: deviceDetails.maxmin.p4Max,\n          min: deviceDetails.maxmin.p4Min,\n          name: deviceDetails.names.p4\n        });\n      }\n    }\n\n    if(this.onDataUpdate!==undefined){\n      this.onDataUpdate();\n    }\n  }\n  \n  addSignalsTempData(deviceName:string, a:firebase.database.DataSnapshot){\n    var device = this.signalDevices.get(deviceName);\n\n    console.log(\"Signals (\"+deviceName+\") Temp Data update: \"+ a.numChildren());\n\n    a.forEach((record:firebase.database.DataSnapshot) => {\n      var data = record.toJSON() as ISignalsTempRecord;\n\n      var d = new Date(0);\n      d.setUTCSeconds(Number(data.time));\n\n      if(device !== undefined){\n        data.p1!==\"---\"&&this.tempData.get(device.deviceName+\":\"+device.probe1Name)!.push({date:d, value:Number(data.p1)});\n        data.p2!==\"---\"&&this.tempData.get(device.deviceName+\":\"+device.probe2Name)!.push({date:d, value:Number(data.p2)});\n        data.p3!==\"---\"&&this.tempData.get(device.deviceName+\":\"+device.probe3Name)!.push({date:d, value:Number(data.p3)});\n        data.p4!==\"---\"&&this.tempData.get(device.deviceName+\":\"+device.probe4Name)!.push({date:d, value:Number(data.p4)});\n  \n      }\n    });\n\n    this.replaceSignalsProbeDetails(deviceName);\n  }\n\n  replaceSmokeProbeDetails(deviceName:string){\n    var deviceDetails = this.smokeDeviceDetails.get(deviceName)\n    if (deviceDetails !== undefined) {\n      //It pains me to write code like this, but it's unavoidable with the way the data is stuctured.\n      //The best thing we can do is restructure the data as soon as we have it.\n      //P1\n      var temp = this.tempData.get(deviceName + \":Probe 1\")\n      if (temp !== undefined && temp[temp.length - 1] !== undefined) {\n        this.probeState.set(deviceName + \":Probe 1\", {\n          temp: temp[temp.length - 1].value.toString(),\n          date: temp[temp.length - 1].date,\n          alarm: Boolean(deviceDetails.alarms.alarm1High) || Boolean(deviceDetails.alarms.alarm1Low),\n          alarmHigh: deviceDetails.alarms.probe1H,\n          alarmLow: deviceDetails.alarms.probe1L,\n          max: deviceDetails.minMax.probe1Max,\n          min: deviceDetails.minMax.probe1Min,\n          name: deviceName\n        });\n      }\n\n      //P2\n      temp = this.tempData.get(deviceName + \":Probe 2\")\n      if (temp !== undefined && temp[temp.length - 1] !== undefined) {\n        this.probeState.set(deviceName + \":Probe 2\", {\n          temp: temp[temp.length - 1].value.toString(),\n          date: temp[temp.length - 1].date,\n          alarm: Boolean(deviceDetails.alarms.alarm2High) || Boolean(deviceDetails.alarms.alarm2Low),\n          alarmHigh: deviceDetails.alarms.probe2H,\n          alarmLow: deviceDetails.alarms.probe2L,\n          max: deviceDetails.minMax.probe2Max,\n          min: deviceDetails.minMax.probe2Min,\n          name: deviceName\n        });\n      }\n\n      if(this.onDataUpdate!==undefined){\n        this.onDataUpdate();\n      }\n    }\n  }\n\n\n  addSmokeTempData(deviceName:string, a:firebase.database.DataSnapshot){\n    var device = this.smokeDevices.get(deviceName);\n    console.log(\"Smoke (\"+deviceName+\") Temp Data update: \"+ a.numChildren());\n\n    a.forEach((record:firebase.database.DataSnapshot) => {\n      var data = record.toJSON() as ISmokeTempRecord;\n\n      var d = new Date(0);\n      d.setUTCSeconds(Number(data.time));\n\n      if(device!== undefined){\n        data.probe1!==\"-\"&&this.tempData.get(device.name+\":Probe 1\")!.push({date:d, value:Number(data.probe1)});\n        data.probe2!==\"-\"&&this.tempData.get(device.name+\":Probe 2\")!.push({date:d, value:Number(data.probe2)});\n      }\n    });\n\n    this.replaceSmokeProbeDetails(deviceName);\n  }\n\n}\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport {CardProps} from 'react-bootstrap/Card'\nimport Container from 'react-bootstrap/Container'\nimport Sound from 'react-sound'\nimport alarmFile from './beeps.mp3'\n\ninterface MyProps {\n    name: string, \n    probe:{ \"temp\":string, \"date\":Date, \"alarm\":boolean, \"alarmHigh\":string, \"alarmLow\":string, \"max\":string, \"min\":string, \"name\":string},\n};\ninterface MyState {\n    isAwknoledged:boolean;\n}\n  \n  class TempDisplay extends Component<MyProps, MyState> {\n    constructor(props:MyProps){\n        super(props);\n\n        this.state = {\n            isAwknoledged:false\n        }\n    }\n\n    static getDerivedStateFromProps(props:MyProps, state:MyState){\n        if(state.isAwknoledged && (props.probe.alarmLow < props.probe.temp) && (props.probe.temp < props.probe.alarmHigh)){\n           return {isAwknoledged:false};\n        }\n\n        return null;\n    }\n\n    awknowledgeAlarm(){\n        this.setState({...this.state, isAwknoledged:true});\n    }\n\n    render() {\n        var temp:Number = Number(this.props.probe.temp);\n        var alarmHigh:Number = Number(this.props.probe.alarmHigh);\n        var alarmLow:Number = Number(this.props.probe.alarmLow);\n\n        var Background:CardProps[\"bg\"] = 'light';\n        var Text:CardProps[\"text\"] = \"secondary\";\n        var IsAlarming = false;\n\n        if((alarmLow < temp) && (temp < alarmHigh)){\n            Background = 'light';\n            Text = 'secondary';\n        }\n        if((alarmLow > temp)){\n            Background = \"primary\";\n            Text = 'white';\n            IsAlarming = true;\n        }\n        if((temp > alarmHigh)){\n            Background = \"danger\";\n            Text=\"white\";\n            IsAlarming = true;\n        }\n\n        return(\n            <>\n            <div className=\"row cardContainer\">\n                <Card className=\"col card\" style={{cursor: 'pointer'}} text={Text} bg={Background} border=\"dark\" onClick={this.awknowledgeAlarm.bind(this)}>\n                    <Card.Title style={{textAlign:\"center\"}}>{this.props.name}</Card.Title>\n                    <Card.Body style={{padding:0}}>\n                    <Container fluid>\n                        <Row style={{padding:0}}>\n                            <Col xs=\"4\" style={{padding:0}}>\n                                <Row style={{padding:0}}><Col><Row style={{fontSize:\"xx-small\", padding:0, margin:0}}>MinAlarm</Row><Row style={{fontSize:\"large\", padding:0, margin:0}}>{this.props.probe.alarmLow}</Row></Col></Row>\n                                <Row style={{padding:0}}><Col><Row style={{fontSize:\"xx-small\", padding:0, margin:0}}>MaxAlarm</Row><Row style={{fontSize:\"large\", padding:0, margin:0}}>{this.props.probe.alarmHigh}</Row></Col></Row>\n                            </Col>\n                            <Col xs=\"4\" style={{padding:0}}>\n                                <Row style={{fontSize:\"xx-large\", writingMode:\"vertical-lr\", padding:0}}>{this.props.probe.temp}°</Row>\n                            </Col>\n                            <Col xs=\"4\" style={{padding:0}}>\n                                <Row style={{padding:0}}><Col><Row style={{fontSize:\"xx-small\", padding:0, margin:0}}>Min</Row><Row style={{fontSize:\"large\", padding:0, margin:0}}>{this.props.probe.min}</Row></Col></Row>\n                                <Row style={{padding:0}}><Col><Row style={{fontSize:\"xx-small\", padding:0, margin:0}}>Max</Row><Row style={{fontSize:\"large\", padding:0, margin:0}}>{this.props.probe.max}</Row></Col></Row>\n                            </Col>\n                        </Row>\n                    </Container>\n                    <Sound url={alarmFile} playStatus={IsAlarming&&!this.state.isAwknoledged?Sound.status.PLAYING:Sound.status.STOPPED} loop={true}/>\n                    </Card.Body>\n                </Card>\n            </div>\n            </>\n        )\n    }\n\n  }\n\n  export default TempDisplay;\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport CardDeck from 'react-bootstrap/CardDeck'\nimport TempDisplay from './TempDisplay'\n\n\n\ninterface MyProps {\n    curTemps:Map<string, { 'date': Date; 'value': Number; }>,\n    probeDetails:Map<string, { \"temp\":string, \"date\":Date, \"alarm\":boolean, \"alarmHigh\":string, \"alarmLow\":string, \"max\":string, \"min\":string, \"name\":string}>;\n};\ninterface MyState {\n\n}\n  class TempColumn extends Component<MyProps, MyState> {\n    constructor(props:MyProps){\n        super(props);\n\n        this.state =  {\n            curTemps:props.curTemps,\n            probeDetails:props.probeDetails\n        }\n    }\n\n    render() {\n        var TempElements:Array<JSX.Element> = [];\n        this.props.probeDetails.forEach((device, key) => \n            TempElements.push(<TempDisplay key={key} name={key} probe={device}/>)\n    )\n        return(\n            <>\n            <div id=\"cardDeckContainer\" className=\"row\">\n                <CardDeck id=\"cardDeck\" className=\"col\">\n                    {TempElements}\n                </CardDeck>\n            </div>\n            </>\n        )\n    }\n\n  }\n\n  export default TempColumn;","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport MetricsGraphics from 'react-metrics-graphics';\nimport './mggraphics.css';\nimport GithubCorner from 'react-github-corner';\nimport ContainerDimensions from 'react-container-dimensions';\nimport { RouteComponentProps } from 'react-router';\nimport axios from 'axios';\n\ninterface MatchParams {\n}\n\n\ninterface Props extends RouteComponentProps<MatchParams> {\n}\n\ninterface MyState {\n  tempData:Array<Array<{ 'date': Date; 'value': number; }>>;\n  baselines:Array<{value:number, label:string}>;\n  markers:Array<{'date':Date; 'label':string}>;\n};\nclass Graph extends Component<Props, MyState> {\n  constructor(state:Props){\n    super(state);\n\n    this.state = {\n      tempData:  [],\n      baselines: [],\n      markers: []\n    };\n  }\n\n  async componentDidMount(){\n    let search = new URLSearchParams(this.props.location.search);\n    var result = await axios({\n            method: 'GET',\n            url: \"https://jsonblob.com/api/jsonBlob/\"+search.get(\"id\"),\n            transformResponse:[(data) => {\n                return JSON.parse(data, (key, value) => {\n                    if (key === \"date\"){\n                        return new Date(value);\n                    }else{\n                        return value;\n                    }\n                });\n            }\n            ]\n        });\n    this.setState({...this.state, tempData:result.data.tempData, baselines:result.data.baselines, markers:result.data.markers})\n  }\n\n  render() {\n    return (\n      <div id=\"App\" style={{padding:0, margin:15}} className=\"row\">\n        <GithubCorner href=\"https://github.com/dlgreenwald/SignalsMontior\" direction=\"left\" octoColor=\"#212529\" bannerColor=\"grey\" />\n        <div id=\"container\"  style={{marginTop:45}} className=\"col\">\n          <div id=\"headerContainer\" className=\"row\">\n            <div id=\"header\">\n              Better Thermoworks Monitor\n            </div>\n          </div>\n          <div id=\"body\" className=\"row\">\n            <div id=\"irbe\">\n              <div id=\"graphContainer\" className=\"row\">\n                <ContainerDimensions>\n                  {({ width, height }) =>\n                    <MetricsGraphics\n                      data={this.state.tempData}\n                      width={width}\n                      height={600}\n                      x_accessor=\"date\"\n                      y_accessor=\"value\"\n                      right=\"40\"\n                      area=\"false\"\n                      baselines={this.state.baselines}\n                      aggregate_rollover=\"true\"\n                      markers={this.state.markers}\n                      missing_is_hidden=\"true\"\n                    />\n                  }\n                </ContainerDimensions>\n              </div>\n              <div id=\"buttonContainer\" className=\"row\">\n                <div id=\"buttons\" className=\"col\">\n                </div>\n              </div>\n            </div>\n          </div>  \n          <div id=\"footer\" className=\"row\">\n            <div id=\"footerContainer\" className=\"col\">\n              \n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default Graph;\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport MetricsGraphics from 'react-metrics-graphics';\nimport LoginModal from './LoginModal';\nimport ShareModal from './ShareModal';\nimport MarkerModal from './MarkerModal';\nimport {ThermoworksFirebase} from './ThermoworksFirebase';\nimport TempColumn from './TempColumn';\nimport './mggraphics.css';\nimport GithubCorner from 'react-github-corner';\nimport ContainerDimensions from 'react-container-dimensions';\nimport Button from 'react-bootstrap/Button';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport axios from 'axios';\nimport { RouteComponentProps } from 'react-router';\nimport Graph from './GraphApp';\n\ninterface MatchParams {\n}\n\ninterface Props extends RouteComponentProps<MatchParams> {\n}\n\n\ninterface MyState {\n  firebase: ThermoworksFirebase\n  tempData:Array<Array<{ 'date': Date; 'value': number; }>>;\n  curTemps:Map<string, { 'date': Date; 'value': number; }>;\n  probeDetails:Map<string, { \"temp\":string, \"date\":Date, \"alarm\":boolean, \"alarmHigh\":string, \"alarmLow\":string, \"max\":string, \"min\":string, \"name\":string}>;\n  showLogin:boolean;\n  baselines:Array<{value:number, label:string}>;\n  shareURL:string;\n  markers:Array<{'date':Date; 'label':string}>;\n  addingMarker:boolean,\n  selectedDate:Date\n\n};\nclass App extends Component<Props, MyState> {\n  constructor(state:Props){\n    super(state);\n\n    this.state = {\n      firebase: new ThermoworksFirebase(),\n      tempData:  [],\n      baselines: [],\n      curTemps: new Map(),\n      probeDetails: new Map(),\n      showLogin:true,\n      shareURL:\"\",\n      markers: [],\n      addingMarker:false,\n      selectedDate: new Date()\n    };\n  }\n\n  async onLogin(username:string, password:string){\n    this.state.firebase.setCredentials(username, password);\n    this.state.firebase.setOnTempUpdate(this.onTempUpdate.bind(this));\n    await this.state.firebase.init();\n    this.setState({...this.state, showLogin:false})\n  }\n\nonTempUpdate(){\n    //Store most recent data as Map for display\n    var newCurTemps:Map<string, { 'date': Date; 'value': number; }> = new Map();\n    this.state.firebase.returnTempData().forEach((probe, key)=>{\n      newCurTemps.set(key, probe[probe.length-1]);\n    })\n\n    //Store all data as Array of Arrays for graph\n    var newTemps:Array<Array<{ 'date': Date; 'value': number; }>>=[];\n    this.state.firebase.returnTempData().forEach((probe)=>{\n      if(probe.length!==0){//the graph componant chokes if it's passed empty datasets.\n        newTemps.push(probe);\n      }\n    })\n\n    var newProbeDetails = this.state.firebase.returnProbeDetails();\n\n    var newBaselines:Array<{value:number, label:string}> =  [];\n    this.state.firebase.returnProbeDetails().forEach((value, key) => {\n      newBaselines.push({value:Number(value.alarmHigh), label:key+\" High\"});\n      if(value.alarmLow!==\"32\"){\n        newBaselines.push({value:Number(value.alarmLow), label:key+\" Low\"})\n      }\n    })\n\n    this.setState({...this.state, \n      tempData:newTemps, curTemps:newCurTemps, probeDetails:newProbeDetails, baselines:newBaselines\n    });\n  }\n\n  async exportXLSX(){\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    const fileExtension = '.xlsx';\n\n    //create book\n    var wb = XLSX.utils.book_new();\n    wb.Props = {\n      Title: \"ThermoWorks Temperature Log\"\n    }\n\n    this.state.firebase.returnTempData().forEach((value, key) => {\n      if(value.length!==0){\n        var sheetname = key.replace(':','-'); //xlsx silently fails once there are colons in the sheet name\n        wb.SheetNames.push(sheetname);\n        wb.Sheets[sheetname] = XLSX.utils.json_to_sheet(value);\n      }\n      \n    })\n\n    //write the book out and stream it to the browser as a file\n    var wbout = XLSX.write(wb, {bookType:'xlsx',  type: 'array'});\n    const data = new Blob([wbout], {type: fileType});\n    FileSaver.saveAs(data, \"Temps\" + fileExtension);\n  }\n\n  async exportURL(){\n    var response = await axios.post(\"https://jsonblob.com/api/jsonBlob\", JSON.stringify({tempData:this.state.tempData, baselines:this.state.baselines, markers:this.state.markers}), {headers:{'Content-Type': 'application/json', 'Accept':'application/json'}});\n    this.setState({...this.state, shareURL:\"https://www.dlgreen.com/SignalsMonitor?id=\"+response.headers[\"x-jsonblob\"]})\n  }\n\n  onGraphClick(d:{date:Date, value:number, index:number, line_id:number}){\n    this.setState({...this.state, selectedDate:d.date, addingMarker:true})\n  }\n\n  saveAnnotation(date:Date, annotation:string){\n    this.state.markers.push({\"date\":date, \"label\":annotation});\n    this.setState({...this.state, addingMarker:false });\n  }\n\n  render() {\n    //If we have a url parameter ID we are showing a shared link\n    let search = new URLSearchParams(this.props.location.search);\n    if(search.get(\"id\")!== null){\n      return <Graph history={this.props.history} location={this.props.location} match={this.props.match}  />\n    }\n\n    return (\n      <div id=\"App\" style={{padding:0, margin:15}} className=\"row\">\n        <GithubCorner href=\"https://github.com/dlgreenwald/SignalsMontior\" direction=\"left\" octoColor=\"#212529\" bannerColor=\"grey\" />\n        <div id=\"container\"  style={{marginTop:45}} className=\"col\">\n          <div id=\"headerContainer\" className=\"row\">\n            <div id=\"header\">\n              Better Thermoworks Monitor\n            </div>\n          </div>\n          <div id=\"body\" className=\"row\">\n            <div id=\"irbe\">\n              <div id=\"graphContainer\" className=\"row\">\n                <ContainerDimensions>\n                  {({ width, height }) =>\n                    <MetricsGraphics\n                      data={this.state.tempData}\n                      width={width}\n                      height={600}\n                      x_accessor=\"date\"\n                      y_accessor=\"value\"\n                      right=\"40\"\n                      area=\"false\"\n                      brush=\"xy\"\n                      baselines={this.state.baselines}\n                      aggregate_rollover=\"true\"\n                      click={this.onGraphClick.bind(this)}\n                      markers={this.state.markers}\n                      missing_is_hidden=\"true\"\n                    />\n                  }\n                </ContainerDimensions>\n              </div>\n              <TempColumn curTemps={this.state.curTemps} probeDetails={this.state.probeDetails} />\n              <div id=\"buttonContainer\" className=\"row\">\n                <div id=\"buttons\" className=\"col\">\n                  <LoginModal show={this.state.showLogin} onLogin={this.onLogin.bind(this)} />\n                  <Button style={{width:\"250px\", margin:\"15px\"}} onClick={this.exportXLSX.bind(this)}>Download *.xlsx</Button>\n                  <ShareModal url={this.state.shareURL} onShare={this.exportURL.bind(this)}/>\n                  <MarkerModal show={this.state.addingMarker} date={this.state.selectedDate} onSave={this.saveAnnotation.bind(this)}></MarkerModal>\n                </div>\n              </div>\n            </div>\n          </div>  \n          <div id=\"footer\" className=\"row\">\n            <div id=\"footerContainer\" className=\"col\">\n              \n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\nReactDOM.render(\n    <Router>\n        <Route exact path=\"/SignalsMonitor/\" component={App} />\n    </Router>\n    \n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/beeps.927d19ee.mp3\";"],"sourceRoot":""}